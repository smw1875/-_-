import RPi.GPIO as GPIO
import time
from multiprocessing import Process
import schedule
import datetime
import sys
import board
import busio
import adafruit_adxl34x

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

print ("start")
trig = 13
echo = 19
GPIO_pin =26
GPIO.setup(27,GPIO.OUT)
GPIO.setup(trig,GPIO.OUT)
GPIO.setup(echo,GPIO.IN)
GPIO.setup(GPIO_pin,GPIO.OUT)

scale = [ 261, 294, 329, 349, 392, 440, 493, 523 ]
list = [4, 4, 5, 5, 4, 4, 2, 4, 4, 2, 2, 1]
list2 = [0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 0]
list3 = [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0]

i2c = busio.I2C(board.SCL, board.SDA)
accelerometer = adafruit_adxl34x.ADXL345(i2c)
array = []

def acc() :
    while True :
        time.sleep(0.5)
        num = accelerometer.acceleration
        array.append(num)
        found = 10
        if num[0] > found :
          GPIO.output(27,True)
          p = GPIO.PWM(GPIO_pin,100)
          p.start(100)
          p.ChangeDutyCycle(90)          
          for i in range(12):  
             p.ChangeFrequency(scale[list3[i]])
             if i == 6:
               time.sleep(1)
             else :
               time.sleep(0.5)
          p.stop()
          GPIO.output(27,False)

        else:
          break
def timer():

           GPIO.output(27,True)
           p = GPIO.PWM(GPIO_pin,100)
           p.start(100)
           p.ChangeDutyCycle(90)
           for i in range(12):  
              p.ChangeFrequency(scale[list2[i]])
              if i == 6:
               time.sleep(1)
              else :
               time.sleep(0.5)
           p.stop()
           GPIO.output(27,False)

schedule.every(1).hours.do(timer)

try :
    while(True):     
      GPIO.output(GPIO_pin,False)
      GPIO.output(trig, False)
      time.sleep(0.5)
      GPIO.output(trig, True)
      time.sleep(0.00001)
      GPIO.output(trig, False)
      while GPIO.input(echo) == 0 :
        pulse_start = time.time()

      while GPIO.input(echo) == 1 :
        pulse_end = time.time() 

      pulse_duration = pulse_end - pulse_start
      distance = pulse_duration * 17000
      distance = round(distance, 2)
      print("Distance : ", distance, "cm")

      acc()
      schedule.run_pending()
      time.sleep(1)
      if distance <=30:
          GPIO.output(27,True)
      else:
          GPIO.output(27,False)
      if distance <=20:
          GPIO.output(27,True)
          p = GPIO.PWM(GPIO_pin,100)
          p.start(100)
          p.ChangeDutyCycle(90)
          
          for i in range(12):  
             p.ChangeFrequency(scale[list[i]])
             if i == 6:
               time.sleep(1)
             else :
               time.sleep(0.5)
          p.stop()
          GPIO.output(27,False)

except KeyboardInterrupt:
    GPIO.cleanup()
